<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/lang
                           http://www.springframework.org/schema/lang/spring-lang-2.5.xsd">

    <import resource="jpa-context.xml"/>
    <import resource="oxm-context.xml"/>

    <bean id="dao" class="uk.ac.ebi.interpro.scan.genericjpadao.GenericDAOImpl">
        <constructor-arg value="uk.ac.ebi.interpro.scan.model.NucleotideSequence"/>
    </bean>

    <util:map id="objectXmlMap" value-type="uk.ac.ebi.interpro.scan.model.ObjectXmlPair">
        <entry key="Pfam">
            <bean class="uk.ac.ebi.interpro.scan.model.ObjectXmlPair">
                <constructor-arg ref="pfamObject"/>
                <constructor-arg ref="pfamXml"/>
            </bean>
        </entry>
    </util:map>

    <!-- HMM databases -->

    <lang:groovy id="pfamObject">
        <lang:inline-script>
            <![CDATA[
                import uk.ac.ebi.interpro.scan.model.*

                // Create protein
                Protein p = new Protein("MDLSALRVEEVQNVINAMQKILECPICLELIKEPVSTKCDHIFCKFCMLKLLNQKKGPSQCPLCKNDI");
                Signature signature = new Signature("PF02310", "B12-binding");
                p.addCrossReference(new ProteinXref("A0A000_9ACTO"));
                Set<Hmmer3Match.Hmmer3Location> locations = new HashSet<Hmmer3Match.Hmmer3Location>();
                locations.add(new Hmmer3Match.Hmmer3Location(3, 107, 3.0, 3.7e-9, 1, 104, 121, 2, 108));
                p.addMatch(new Hmmer3Match(signature, 0.035, 3.7e-9, locations));



                // Create nucleotide sequence
                NucleotideSequence ns = new NucleotideSequence("CCGGAAGTTATTCACATTTATATGCGGAACCTCATATAAAATGTGAAAAGAAGGAATGCATGGAATGAATATTGGACAAAAAGTACTGTTCGAACTTAAAA");

                // Create ORF
                OpenReadingFrame orf = new OpenReadingFrame(3, 63, NucleotideSequenceStrand.SENSE);
                orf.setProtein(p);

                ns.addCrossReference(new NucleotideSequenceXref("ENA", "AP009179", "AP009179.1"));
                ns.addOpenReadingFrame(orf);
                return ns;

                return ns;
            ]]>
        </lang:inline-script>
    </lang:groovy>
    <bean id="pfamXml" class="java.lang.String">
        <constructor-arg>
            <value>
                <![CDATA[
<nucleotide-sequence xmlns="http://www.ebi.ac.uk/interpro/resources/schemas/interproscan5">
    <sequence md5="6e58bcca14d51fe29ba7265454b4f92c">ccggaagttattcacatttatatgcggaacctcatataaaatgtgaaaagaaggaatgcatggaatgaatattggacaaaaagtactgttcgaacttaaaa</sequence>
    <xref name="AP009179.1" id="AP009179" db="ENA"/>
    <orf strand="SENSE" start="3" end="63">
        <protein>
            <sequence md5="5ab17489095dd2836122eec0e91db82d">MDLSALRVEEVQNVINAMQKILECPICLELIKEPVSTKCDHIFCKFCMLKLLNQKKGPSQCPLCKNDI</sequence>
            <xref id="A0A000_9ACTO"/>
            <matches>
                <hmmer3-match score="0.035" evalue="3.7E-9">
                    <signature name="B12-binding" ac="PF02310"/>
                    <locations>
                        <hmmer3-location env-start="2" env-end="108" hmm-length="121" hmm-end="104" hmm-start="1" evalue="3.7E-9" score="3.0" end="107" start="3"/>
                    </locations>
                </hmmer3-match>
            </matches>
        </protein>
    </orf>
</nucleotide-sequence>
                ]]>
            </value>
        </constructor-arg>
    </bean>

</beans>
