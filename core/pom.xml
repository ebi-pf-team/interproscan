<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.ac.ebi.interpro.scan</groupId>
    <artifactId>interproscan</artifactId>
    <version>5.14-53.0</version>

    <packaging>pom</packaging>
    <name>InterProScan</name>
    <url>http://www.ebi.ac.uk/interpro/</url>

    <organization>
        <name>European Bioinformatics Institute</name>
        <url>http://www.ebi.ac.uk/</url>
    </organization>

    <distributionManagement>
        <repository>
            <!-- Tell maven to deploy artifacts to a temporary staging location inside your target directory-->
            <id>i5.repo</id>
            <name>InterProScan 5 maven repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

    <repositories>

        <repository>
            <id>apache-maven-snapshots</id>
            <name>Apache snapshot repository</name>
            <url>http://svn.apache.org/maven-snapshot-repository/</url>
            <layout>default</layout>
        </repository>

        <repository>
            <id>JBoss</id>
            <name>JBoss releases</name>
            <url>http://repository.jboss.org/nexus/content/groups/public</url>
        </repository>

        <!-- Required for sleepycat (BerkelyDB) -->
        <repository>
            <id>oracleReleases</id>
            <name>Oracle Released Java Packages</name>
            <url>http://download.oracle.com/maven</url>
            <layout>default</layout>
        </repository>

    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>kos</id>
            <url>http://opensource.kantega.no/nexus/content/groups/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Dependency versions -->
        <spring.version>3.1.2.RELEASE</spring.version>
        <!--<spring.oxm.version>1.5.7</spring.oxm.version>-->
        <spring.oxm.version>1.5.9</spring.oxm.version>
        <hibernate.entity.manager.version>3.6.0.Final</hibernate.entity.manager.version>
        <!--<cglib.version>2.2</cglib.version>-->
        <groovy.version>1.6.3</groovy.version>
        <hsqldb.version>1.8.0.10</hsqldb.version>
        <mysql.version>5.1.12</mysql.version>
        <!--<slf4j.version>1.5.11</slf4j.version>-->
        <slf4j.version>1.6.6</slf4j.version>
        <xmlunit.version>1.3</xmlunit.version>
        <!--<jaxb-api.version>2.1</jaxb-api.version>-->
        <jaxb-api.version>2.2.2</jaxb-api.version>
        <!--<h2.database.version>1.2.147</h2.database.version>-->
        <h2.database.version>1.3.168</h2.database.version>
        <i5.svn.revision>5.14-53.0</i5.svn.revision>
        <i5.version>${project.version}</i5.version>
        <maven-assembly-plugin.version>2.5.4</maven-assembly-plugin.version>
        <!-- github server corresponds to entry in ~/.m2/settings.xml -->
        <github.global.server>github</github.global.server>
    </properties>

    <modules>
        <module>generic-jpa-dao</module>
        <module>model</module>
        <module>io</module>
        <module>persistence</module>
        <module>business</module>
        <module>web</module>
        <module>management</module>
        <module>jms-implementation</module>
        <module>precalcmatches</module>
    </modules>

    <!-- TODO: Define inherited POM settings for modules (see model/pom.xml) -->
    <dependencies>

        <!-- Logging -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- Spring framework dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Test scope only -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>

        <!--needed for easymock-->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.2.2</version>
            <scope>test</scope>
        </dependency>


        <!-- Spring test integration -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-io</groupId>
                    <artifactId>commons-io</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.18</version>
        </dependency>

        <!-- joda time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.1</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Use Java 6 language features -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <!-- JavaDocs (generate: mvn javadoc:javadoc, package: mvn javadoc:jar) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <overview/>
                </configuration>
            </plugin>
            <!-- Create JAR of source files (source:jar, source:test-jar) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <!--configuration>
                    <finalName>filename-of-generated-jar-file</finalName>
                    <attach>false</attach>
                    </configuration-->
            </plugin>
            <!-- Tell maven to deploy artifacts to a temporary staging location inside your target directory-->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <altDeploymentRepository>i5.repo::default::file://${user.dir}/target/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
            <!-- Configure the site-maven-plugin to upload from your temporary staging i5.repo to your mvn-repo branch on github-->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.11</version>
                <configuration>
                    <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                    <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
                    <outputDirectory>${user.dir}/target/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
                    <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
                    <excludes>
                        <exclude>**/*dist*</exclude>
                    </excludes>
                    <repositoryName>interproscan</repositoryName>      <!-- github repo name -->
                    <repositoryOwner>ebi-pf-team</repositoryOwner>     <!-- github username  -->
                    <!--<dryRun>true</dryRun> &lt;!&ndash; display creates/updates but don't actually perform any operations on the target GitHub repo &ndash;&gt;-->
                </configuration>
                <executions>
                    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
