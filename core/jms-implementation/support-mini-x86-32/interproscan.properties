# This is the InterProScan configuration file

##
## Temporary files and directory
##
# The text [UNIQUE], if present, will be replaced by a value unique to your running instance

# Temporary files used by the analyses will be placed in directories here:
temporary.file.directory.suffix=[UNIQUE]
temporary.file.directory=temp/${temporary.file.directory.suffix}

##
## H2 database
##
# The H2 database is copied by the standalone version of interproscan
i5.h2.database.original.location=work/template/interpro.zip
# LOCK_TIMEOUT: Sets the lock timeout (in milliseconds) for the current session
i5.database.connection.url=jdbc:h2:mem:interpro;LOCK_TIMEOUT=10000000

##
## binary paths
##
# Configure the version of perl to use when running member databases perl binaries
perl.command=perl

# Binary file locations
#rpsblast
binary.rpsblast.path=bin/blast/ncbi-blast-2.3.0+/bin/rpsblast
rpsblast.cdd.switches=-evalue 0.01 -seg no -outfmt 5

#rpsbproc
binary.rpsbproc.path=bin/blast/rpsbproc/rpsbproc
rpsbproc.cdd.binary.switches=

#hmmer 3
binary.hmmer3.path=bin/hmmer/hmmer3/3.1b1
binary.hmmer3.hmmscan.path=bin/hmmer/hmmer3/3.1b1/hmmscan
binary.hmmer3.hmmsearch.path=bin/hmmer/hmmer3/3.1b1/hmmsearch

#hmmer 2
binary.hmmer2.hmmsearch.path=bin/hmmer/hmmer2/2.3.2/hmmsearch
binary.hmmer2.hmmpfam.path=bin/hmmer/hmmer2/2.3.2/hmmpfam
binary.fingerprintscan.path=bin/prints/fingerPRINTScan
binary.coils.path=bin/ncoils/2.2.1/ncoils
domainfinder3.path=bin/gene3d/DomainFinder3
binary.prodom.2006.1.prodomblast3i.pl.path=bin/prodom/2006.1/ProDomBlast3i.pl
# Note: Correct prosite binary distribution for your platform can be downloaded: ftp://ftp.expasy.org/databases/prosite/tools/ps_scan/
binary.prosite.psscan.pl.path=bin/prosite/ps_scan.pl
binary.prosite.pfscan.path=bin/prosite/pfscan
binary.prosite.pfsearch.path=bin/prosite/pfsearch
binary.prosite.python.path=
binary.prosite.pfsearch.wrapperpath=bin/prosite/pfsearch_wrapper.py

#panther
binary.panther.path=bin/panther/pantherScore/1.04/pantherScore.pl
binary.panther.perl.lib.dir=bin/panther/pantherScore/1.04/lib

binary.panther.blast.path=bin/blast/2.2.24/bin/blastall
binary.superfamily.1.75.ass3.pl.path=bin/superfamily/1.75/ass3_single_threaded.pl
binary.pirsf.pl.path=bin/pirsf/3.01/pirsf.pl
binary.blastall.2.2.6.path=bin/blast/2.2.6/blastall
binary.blast.2.2.19.path=bin/blast/2.2.19
binary.getorf.path=bin/nucleotide/getorf

#signalp
# Note: SignalP binary not distributed with InterProScan 5, please install separately e.g. in bin/signalp/4.1/signalp
signalp_euk.signature.library.release=4.1
signalp_gram_positive.signature.library.release=4.1
signalp_gram_negative.signature.library.release=4.1
binary.signalp.path=bin/signalp/4.1/signalp
signalp.perl.library.dir=bin/signalp/4.1/lib

#TMHMM 2.0
tmhmm.signature.library.release=2.0c
# Note: TMHMM binary not distributed with InterProScan 5, please install separately e.g. in bin/tmhmm/2.0c/decodeanhmm
binary.tmhmm.path=bin/tmhmm/2.0c/decodeanhmm

#PHOBIUS
# Note: Phobius binary not distributed with InterProScan 5, please install separately e.g. in bin/phobius/1.01/phobius.pl
phobius.signature.library.release=1.01
binary.phobius.pl.path=bin/phobius/1.01/phobius.pl
#

##
##  Member database model / data file locations (alphabetically sorted)
##
#CDD
cdd.signature.library.release=3.14
cdd.signature.list.path=data/cdd/cddid.tbl
cdd.library.path=data/cdd/3.14/db/Cdd_NCBI
cdd.data.path=data/cdd/3.14/data
cdd.rpsbproc.data.config.path=data/cdd/3.14/rpsbproc.ini

# Gene3D
gene3d.signature.library.release=3.5.0
gene3d.hmm.path=data/gene3d/3.5.0/gene3d_classified.hmm
gene3d.model2sf_map.path=data/gene3d/3.5.0/model_to_family_map.csv

# HAMAP 201511.02
hamap.profile.models.path=data/hamap/201511.02/hamap.prf
hamap.profile.models.dir=data/hamap/201511.02/profiles
hamap.hmm.lib.path=data/hamap/201511.02/hamap.hmm.lib
hamap.signature.library.release=201511.02

#PANTHER
panther.temporary.file.directory=

#PANTHER 10.0
panther.signature.library.release=10.0
panther.models.dir=data/panther/10.0/model

# PFam
#
#Pfam 28.0
pfam-a.signature.library.release=28.0
pfam-a.hmm.path=data/pfam/28.0/pfam_a.hmm
pfam-a.seed.path=data/pfam/28.0/pfam_a.seed
pfam-clans.path=data/pfam/28.0/pfam_clans
##

#PIRSF 3.01
pirsf.sfhmm.path.3.01=data/pirsf/3.01/sf_hmm_all
pirsf.dat.path.3.01=data/pirsf/3.01/pirsf.dat

#PRINTS 42.0
prints.kdat.path.42.0=data/prints/42.0/prints42_0.kdat
prints.pval.path.42.0=data/prints/42.0/prints.pval
prints.hierarchy.path.42.0=data/prints/42.0/FingerPRINTShierarchy.db

#ProDom 2006.1
prodom.ipr.path.2006.1=data/prodom/2006.1/prodom.ipr

#prosite 20.119
prosite.patterns.signature.library.release=20.119
prosite.profiles.signature.library.release=20.119
prosite.models.path=data/prosite/20.119/prosite.dat
prosite.evaluator.models.path=data/prosite/20.119/evaluator.dat
#
# SignalP 4.0
signalp.4.0.perl.library.dir=bin/signalp/4.0/lib

#SMART 6.2
# Note: Smart overlapping and threshold files not distributed with InterProScan 5, please install separately e.g. in data/smart/6.2
smart.hmm.path.6.2=data/smart/6.2/smart.HMMs
smart.hmm.bin.path.6.2=data/smart/6.2/smart.HMMs.bin
smart.overlapping.path.6.2=
smart.threshold.path.6.2=

#SuperFamily 1.75
superfamily.hmm.path.3.0=data/superfamily/1.75/hmmlib_1.75
superfamily.self.hits.path.1.75=data/superfamily/1.75/self_hits.tab
superfamily.cla.path.1.75=data/superfamily/1.75/dir.cla.scop.txt_1.75
superfamily.model.tab.path.1.75=data/superfamily/1.75/model.tab
superfamily.pdbj95d.path.1.75=data/superfamily/1.75/pdbj95d

#TigrFam 15.0
tigrfam.hmm.path.15.0=data/tigrfam/15.0/TIGRFAMs_15.0_HMM.LIB

#TMHMM 2.0
# Note: TMHMM model files not distributed with InterProScan 5, please install separately e.g. in data/tmhmm/2.0/TMHMM2.0.model
tmhmm.model.path=data/tmhmm/2.0c/TMHMM2.0c.model

##
## cpu options for parallel processing
##

#hmmer cpu options for the different jobs
hmmer3.hmmsearch.cpu.switch.pfama=--cpu 1
hmmer3.hmmsearch.cpu.switch.tigrfam=--cpu 1
hmmer3.hmmsearch.cpu.switch.gene3d=--cpu 1
hmmer3.hmmsearch.cpu.switch.superfamily=--cpu 1
hmmer3.hmmsearch.switches.hmmfilter=-E 100 --domE 100 --incE 100 --incdomE 100
hmmer3.hmmsearch.cpu.switch.hmmfilter=--cpu 1

hmmer2.hmmpfam.cpu.switch.smart=--cpu 1
hmmer2.hmmpfam.cpu.switch.pirsf=--cpu 1

#blastall cpu options
blastall.cpu.switch.pirsf=-a 1

#panther binary cpu options (for blastall and hmmsearch)
panther.binary.cpu.switch=-c 1

#pirsf binary cpu options (for hmmscan)
pirsf.pl.binary.cpu.switch=-cpu 1


##
## max number of proteins per analysis batch
##
# These values control the maximum number of proteins put through
# an analysis in one go - different algorithms have different optimum values.
# Note that if you suffer from out of memory errors, reducing these values
# will almost certainly help, but may reduce the speed of analysis.
analysis.max.sequence.count.CDD=10000
analysis.max.sequence.count.TMHMM=10000
analysis.max.sequence.count.PANTHER=500
analysis.max.sequence.count.SMART=500
analysis.max.sequence.count.TIGRFAM=4000
analysis.max.sequence.count.GENE3D=4000
analysis.max.sequence.count.PRINTS=1000
analysis.max.sequence.count.PROSITE_PROFILES=150
analysis.max.sequence.count.PROSITE_PATTERNS=4000
analysis.max.sequence.count.PIRSF=2000
analysis.max.sequence.count.PRODOM=4000
analysis.max.sequence.count.SSF=1000
analysis.max.sequence.count.HAMAP=10000
analysis.max.sequence.count.PFAM=4000
analysis.max.sequence.count.COILS=10000
analysis.max.sequence.count.PHOBIUS=10000
analysis.max.sequence.count.SIGNALP=10000

##
##  General settings
##

# If multiple hosts are sharing the same file system, a delay may be required to
# avoid stale NFS handles
# nfs.delay.milliseconds=0

# Instructs I5 to completely clean up after itself - leave set to true.
#delete.temporary.directory.on.completion=true
delete.temporary.directory.on.completion=false



##
## Broker TCP Connection
##

# A list of TCP ports that should not be used for messaging. (Apart from this, only ports > 1024 and < 65535 will be used.)
tcp.port.exclusion.list=3879,3878,3881,3882

##
##  precalculated match lookup service
##
# By default, if the sequence already has matches available from the EBI, this service will look them
# up for you.  Note - at present it will always return all the available matches, ignoring any -appl options
# set on the command line.
precalculated.match.lookup.service.url=http://www.ebi.ac.uk/interpro/match-lookup

#proxy set up
precalculated.match.lookup.service.proxy.host=
precalculated.match.lookup.service.proxy.port=3128


##
## getorf configuration for nucleic acid sequences
##
# the following are roughly the times getorf takes to find sequences of open reading frames (ORFs) in n nucleotide sequences
#number of sequences -> approx. time it takes in our tests
#        600000 -> 10 minutes
#        3600000 -> 1 hour
#        7200000 -> 2 hours
#        43200000 -> 12 hours

# JOB: jobLoadNucleicAcidSequence
getorf.minsize=50

##
## Output format
##
# TRUE by default, which means all generated graphical output documents (only SVG at the moment) will be archived (using the Linux command tar).
# This simple switch allows you to switch the archive mode off (simply set it to FALSE).
archiveSVGOutput=true

##
## Master/Stand alone embedded workers
##

# Set the number of embedded workers to the number of processors that you would like to employ
# on the machine you are using to run InterProScan.
#number of embedded workers  a master process can have
number.of.embedded.workers=6
maxnumber.of.embedded.workers=8

##
## Distributed mode (Cluster mode)
##

#grid name
grid.name=lsf
#grid.name=other-cluster

#project name for this run  - use user.digest
user.digest=i5GridRun

#grid jobs limit : number of jobs you are allowed to run on the cluster
grid.jobs.limit=1000


#time between each bjobs or qstat command to check the status of jobs on the cluster
grid.check.interval.seconds=120

#allow master interproscan to run binaries ()
master.can.run.binaries=true

#deal with unknown step states
recover.unknown.step.state=false

#Grid submission commands (e.g. LSF bsub or SGE qsub) for starting remote workers
#commands the master uses to start new remote workers
grid.master.submit.command=bsub -q QUEUE_NAME
grid.master.submit.high.memory.command=bsub -q QUEUE_NAME -M 8192

#commands a worker uses to start new remote workers
grid.worker.submit.command=bsub -q QUEUE_NAME
grid.worker.submit.high.memory.command=bsub -q QUEUE_NAME -M 8192

# command to start a new worker (new jvm)
worker.command=java -Xms32m -Xmx2048m -jar interproscan-5.jar
# This may be identical to the worker.command argument above, however you may choose to select
# a machine with a much larger available memory, for use when a StepExecution fails.
worker.high.memory.command=java -Xms32m -Xmx2048m -jar interproscan-5.jar

# Set the number of embedded workers to the number of processors that you would like to employ
# on the node machine on which the worker will run.
#number of embedded workers in a remote worker
worker.number.of.embedded.workers=4
worker.maxnumber.of.embedded.workers=4

# max number of connections to the master
master.maxconsumers=48

#number of connections to the worker
worker.maxconsumers=32

#throttled network?
grid.throttle=true

# max number of jobs a tier 1 worker is allowed on its queue
worker.maxunfinished.jobs=32

#network tier depth
max.tier.depth=1

# Active MQ JMS broker temporary data directory
jms.broker.temp.directory=activemq-data/localhost/tmp_storage

verbose.log=true

verbose.log.level=10

