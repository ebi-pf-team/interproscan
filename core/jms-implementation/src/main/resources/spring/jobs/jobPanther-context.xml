<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

    <import resource="classpath:/spring/persistence/persistence-config-context.xml"/>

    <!-- ######################## JOB: PANTHER ############################  -->

    <bean id="jobPanther" class="uk.ac.ebi.interpro.scan.management.model.Job">
        <property name="description"
                  value="The PANTHER (Protein ANalysis THrough Evolutionary Relationships) Classification System is a unique resource that classifies genes by their functions, using published scientific experimental evidence and evolutionary relationships to predict function even in the absence of direct experimental evidence."/>
        <property name="analysis" value="true"/>
        <property name="libraryRelease" ref="signatureLibraryReleasePanther"/>
        <property name="nonEmptyPaths">
            <list value-type="java.lang.String">
                <ref bean="hmmerBinariesPath"/>
                <ref bean="pantherHMMPath"/>
            </list>
        </property>
        <property name="mandatoryParameters">
            <map key-type="java.lang.String" value-type="java.lang.String">
                <entry key="binary.hmmer3.hmmsearch.path" value-ref="hmmerBinariesPath"/>
                <entry key="panther.hmm.path" value-ref="pantherHMMPath"/>
            </map>
        </property>
    </bean>

    <!--Add path to (H)mmsearch binary-->
    <bean id="hmmerBinariesPath" class="java.lang.String">
        <constructor-arg value="${binary.hmmer3.path}"/>
    </bean>
    <bean id="pantherHMMPath" class="java.lang.String">
        <constructor-arg value="${panther.hmm.path}"/>
    </bean>

    <bean id="abstractPantherStep" abstract="true" class="uk.ac.ebi.interpro.scan.management.model.Step">
        <property name="job" ref="jobPanther"/>
        <property name="maxProteins" value="${analysis.max.sequence.count.PANTHER}"/>
        <property name="createStepInstancesForNewProteins" value="true"/>
        <property name="retries" value="0"/>
        <property name="nfsDelayMilliseconds" value="${nfs.delay.milliseconds}"/>
    </bean>

    <bean id="stepPantherWriteFastaFile"
          class="uk.ac.ebi.interpro.scan.management.model.implementations.WriteFastaFileStep"
          parent="abstractPantherStep">
        <!-- This step has no dependencies, so will be scheduled first for its associated job. -->
        <property name="stepDescription" value="Create FASTA file."/>
        <property name="fastaFileNameTemplate" ref="fastaFileNameTemplate"/>
        <property name="proteinDAO" ref="proteinDAO"/>
    </bean>

    <bean id="stepPantherRunHmmer3"
          class="uk.ac.ebi.interpro.scan.management.model.implementations.hmmer.RunHmmerBinaryStep"
          parent="abstractPantherStep">
        <property name="dependsUpon" ref="stepPantherWriteFastaFile"/>
        <property name="stepDescription" value="Run HMMER 3 Binary for selected proteins"/>
        <property name="forceHmmsearch" value="${panther.hmmsearch.force}"/>
        <property name="fullPathToHmmScanBinary" value="${binary.hmmer3.hmmscan.path}"/>
        <property name="fullPathToHmmsearchBinary" value="${binary.hmmer3.hmmsearch.path}"/>
        <property name="binarySwitches" value="${hmmer3.hmmsearch.switches.panther} ${hmmer3.hmmsearch.cpu.switch.panther}"/>
        <property name="fullPathToHmmFile" value="${panther.hmm.path}"/>
        <property name="fastaFileNameTemplate" ref="fastaFileNameTemplate"/>
        <property name="retries" value="3"/>
        <property name="usesFileOutputSwitch" value="true"/>
        <property name="outputFileNameTemplate" ref="rawAnalysisOutputFileTemplate"/>
        <property name="useTbloutFormat" value="false"/>
        <property name="useDomTbloutFormat" value="false"/>
        <property name="requiresDatabaseAccess" value="false"/>
    </bean>

    <bean id="stepPantherRunBinary"
          class="uk.ac.ebi.interpro.scan.management.model.implementations.panther.RunPantherTreeGrafterStep"
          parent="abstractPantherStep">
        <property name="dependsUpon" ref="stepPantherRunHmmer3"/>
        <property name="stepDescription" value="Run PANTHER TreeGrafter binary for selected proteins"/>
        <property name="forceHmmsearch" value="${panther.hmmsearch.force}"/>
        <!--Add Python command-->
        <property name="fullPathToPython" value="${python3.command}"/>
        <!--Panther Treegrafter python script-->
        <property name="fullPathToBinary" value="${binary.treegrafter.path}"/>
        <!-- EPA-NG binary       -->
        <property name="fullPathToEPANGBinary" value="${binary.epang.path}"/>
        <property name="pantherModelsDirectory" value="${panther.models.dir}"/>
        <property name="binarySwitches" value="${panther.binary.switches}"/>
        <property name="usesFileOutputSwitch" value="true"/>
        <property name="fastaFileNameTemplate" ref="fastaFileNameTemplate"/>
        <property name="inputFileNameHmmerRawOutputTemplate" ref="rawAnalysisOutputFileTemplate"/>
        <property name="outputFileNameTemplate" ref="rawAnalysisOutputOneFileTemplate"/>
        <property name="retries" value="3"/>
        <property name="requiresDatabaseAccess" value="false"/>
        <property name="serialGroup" value="PANTHER_BINARY"/>
    </bean>

    <bean id="stepPantherParseOutput"
          class="uk.ac.ebi.interpro.scan.management.model.implementations.panther.PantherParseStep"
          parent="abstractPantherStep">
        <property name="dependsUpon" ref="stepPantherRunBinary"/>
        <property name="stepDescription" value="Parse the output from Panther"/>
        <property name="outputFileTemplate" ref="rawAnalysisOutputOneFileTemplate"/>
        <property name="parser">
            <bean class="uk.ac.ebi.interpro.scan.io.match.panther.PantherMatchParser">
                <!--TODO: Figure out how to handle signature library release-->
                <constructor-arg ref="latestPantherSignatureLibraryRelease"/>
            </bean>
        </property>
        <property name="rawMatchDAO" ref="pantherRawMatchDAO"/>
        <property name="serialGroup" value="PARSE_PANTHER"/>
        <property name="retries" value="3"/>
    </bean>

    <bean id="stepPantherDeleteFastaFile"
          class="uk.ac.ebi.interpro.scan.management.model.implementations.DeleteFileStep" parent="abstractPantherStep">
        <property name="dependsUpon" ref="stepPantherParseOutput"/>
        <property name="stepDescription" value="Delete the analysis temporary files"/>
        <property name="fileNameTemplate">
            <list>
                <ref bean="fastaFileNameTemplate"/>
                <ref bean="rawAnalysisOutputFileTemplate"/>
                <ref bean="rawAnalysisOutputOneFileTemplate"/>
            </list>
        </property>
        <property name="deleteWorkingDirectoryOnCompletion" value="${delete.temporary.directory.on.completion}"/>
    </bean>

    <bean id="stepPantherPostProcessing"
          class="uk.ac.ebi.interpro.scan.management.model.implementations.panther.PantherPostProcessingStep"
          parent="abstractPantherStep">
        <property name="dependsUpon" ref="stepPantherParseOutput"/>
        <property name="stepDescription" value="Performs post processing and match persistence on Panther data"/>
        <property name="serialGroup" value="PANTHER_POST_PROCESSING"/>
        <property name="signatureLibraryRelease" ref="latestPantherSignatureLibraryRelease"/>
        <property name="rawMatchDAO" ref="pantherRawMatchDAO"/>
        <property name="filteredMatchDAO">
            <bean class="uk.ac.ebi.interpro.scan.persistence.PantherFilteredMatchDAOImpl">
                <property name="dbStore" ref="kvStoreMatches"/>
                <property name="matchDAO" ref="matchDAO"/>
                <property name="paintDirectory" value="${panther.models.dir}/PAINT_Annotations"/>
            </bean>
        </property>
        <property name="retries" value="3"/>
    </bean>

    <!-- ######################## Dependencies ############################  -->
    <bean id="pantherRawMatchDAO" class="uk.ac.ebi.interpro.scan.persistence.raw.PantherRawMatchDAOImpl"/>

    <bean id="signatureLibraryReleasePanther" class="uk.ac.ebi.interpro.scan.model.SignatureLibraryRelease">
        <constructor-arg type="uk.ac.ebi.interpro.scan.model.SignatureLibrary" value="PANTHER"/>
        <constructor-arg type="java.lang.String" ref="latestPantherSignatureLibraryRelease"/>
    </bean>

    <bean id="latestPantherSignatureLibraryRelease" class="java.lang.String">
        <constructor-arg value="${panther.signature.library.release}"/>
    </bean>
    <!-- !!!!!!!!!!!!!!!!!!!!! Dependencies-END !!!!!!!!!!!!!!!!!!!!!!!!!!!!  -->
</beans>
